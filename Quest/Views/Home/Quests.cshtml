@{
    ViewData["Title"] = "Quests";
}
<h1>@ViewData["Title"]</h1>
<style>
    h3 {
        text-align: center;
        background-color: azure
    }
    label {
        text-align: left
    }
    input {
        margin-left:200px;
        background-color: azure
    }
</style>
<h3>Here you can choose a quest</h3>
<nav id="subjectFilter">
    <ul id="lstSubjects">
        List of subjects
    </ul>
</nav>

<div id="questContent">
    Ожидаю загрузку данных
</div>


@*<div>
    <form id="frmCreate" >
        <label>Name<input type="text" name="Name" /></label><br />
        <label>Subject<input type="text" name="Subject" /></label><br />
        <label>Time<input type="number" name="Time" /></label><br />
        <label>Level of fear<input type="text" name="LevelOfFear" /></label><br />
        <label>Difficult Level<input type="text" name="DifficultyLevel" /></label><br />
        <label>Number of players<input type="number" name="NumberOfPlayers" /></label><br />
        <input type="button" value="Create" id="btnCreate" />
    </form>
</div>*@
<script>
    /**
     * Отображение ошибки для пользователя
     */
    function renderError(err) {
        console.log(err)
    }
    
    let lstSubjects = document.getElementById('lstSubjects')

    /**
     * (R) Read Получение списка Subjects с сервера
     */
    function getSubjects() {
        fetch('/api/Subjects')
            .then(res => { return res.json() })
        .then(data=> {
                renderSubjects(data)
        })
        .catch(err=> {
            console.log(err)
        })
    }



    /**
     * Построение списка subjects
     */
    function renderSubjects(subjects) {
        console.log(subjects)
        lstSubjects.innerHTML = "" // Очистить список
        subjects.map(subject => {
            let li = document.createElement('li')
          
            li.dataset.subject_id = subject.id
            li.innerText = subject.name
            li.onclick=getSearchQuest()

            lstSubjects.appendChild(li)
        })
    }
    let filter = document.getElementById("subjectFilter")
    let content = document.getElementById("questContent")
    let quests = []
    /**
     * Получение данных о quests без фильтра
     */
    //*-----
    function getQuests() {
        fetch('/api/ApiQuestRooms').then(res => { return res.json })
            .then(data => { renderQuests(data) })
        .catch(err => {
            renderError(err)
        })
    }
    /**
    * Процесс построения данных о quests
    */
    function renderQuests(quests) {
        content.innerHTML = ""
        if (quests.length === 0) {
            let msg = '<div class="alert alert-secondary" role = "alert" > По вашему запросу Quests не найдено </div>'
            content.innerHTML = msg
            return
        }
        let ul = document.createElement('ul')
        quests.map(quest => {
            let li = document.createElement('li')
            li.dataset.quest_id = quest.id

            let h3 = document.createElement('h3')
            h3.innerText = quest.name

            
            li.appendChild(h3)
            ul.appendChild(li)
        })

        content.appendChild(ul)
    }
    /**
     * Получение данных о quests, в соответствии с фильтром
     */
    function getSearchQuest() {
        console.log(event.target)
        console.log(event.target.dataset.subject_id)

        fetch('/api/Search/?SubjectId=' + event.target.dataset.subject_id)
            .then(res => res.json())
            .then(data => {
                
                quests = data
                renderQuests(quests)
            })
            .catch(err => {
                renderError(err)
            })

    }
    getSubjects()
    getQuests()
</script>